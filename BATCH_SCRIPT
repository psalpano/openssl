#!/bin/bash
#Use "chmod 755 BATCH_SCRIPT" to allow permission to run this script
#Run with "./BATCH_SCRIPT" after granting permission

#Encoding lena.bmp using AES
openssl enc -aes-128-cbc -e -in lena.bmp -out CBC-128.bmp -K 1010101 -iv 0101010
openssl enc -aes-128-cfb -e -in lena.bmp -out CFB-128.bmp -K 1010101 -iv 0101010
openssl enc -aes-128-cfb1 -e -in lena.bmp -out CFB1-128.bmp -K 1010101 -iv 0101010
openssl enc -aes-128-cfb8 -e -in lena.bmp -out CFB8-128.bmp -K 1010101 -iv 0101010
openssl enc -aes-128-ofb -e -in lena.bmp -out OFB-128.bmp -K 1010101 -iv 0101010
openssl enc -aes-128-ecb -e -in lena.bmp -out ECB-128.bmp -K 1010101
openssl enc -aes-192-cbc -e -in lena.bmp -out CBC-192.bmp -K 1010101 -iv 0101010
openssl enc -aes-192-cfb -e -in lena.bmp -out CFB-192.bmp -K 1010101 -iv 0101010
openssl enc -aes-192-cfb1 -e -in lena.bmp -out CFB1-192.bmp -K 1010101 -iv 0101010
openssl enc -aes-192-cfb8 -e -in lena.bmp -out CFB8-192.bmp -K 1010101 -iv 0101010
openssl enc -aes-192-ofb -e -in lena.bmp -out OFB-192.bmp -K 1010101 -iv 0101010
openssl enc -aes-192-ecb -e -in lena.bmp -out ECB-192.bmp -K 1010101
openssl enc -aes-256-cbc -e -in lena.bmp -out CBC-256.bmp -K 1010101 -iv 0101010
openssl enc -aes-256-cfb -e -in lena.bmp -out CFB-256.bmp -K 1010101 -iv 0101010
openssl enc -aes-256-cfb1 -e -in lena.bmp -out CFB1-256.bmp -K 1010101 -iv 0101010
openssl enc -aes-256-cfb8 -e -in lena.bmp -out CFB8-256.bmp -K 1010101 -iv 0101010
openssl enc -aes-256-ofb -e -in lena.bmp -out OFB-256.bmp -K 1010101 -iv 0101010
openssl enc -aes-256-ecb -e -in lena.bmp -out ECB-256.bmp -K 1010101

#Remove block comment to see the encoded AES images. 
#Just make sure to call back the encryption to return the changed header files to 
#the encrypted header files so that the decryption do not fail
: <<'END'
dd if=lena.bmp of=CBC-128.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=CFB-128.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=CFB1-128.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=CFB8-128.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=OFB-128.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=ECB-128.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=CBC-192.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=CFB-192.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=CFB1-192.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=CFB8-192.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=OFB-192.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=ECB-192.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=CBC-256.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=CFB-256.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=CFB1-256.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=CFB8-256.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=OFB-256.bmp bs=1 count=54 conv=notrunc
dd if=lena.bmp of=ECB-256.bmp bs=1 count=54 conv=notrunc
END

#Decryption of encrypted AES images
openssl enc -aes-128-cbc -d -in CBC-128.bmp -out CBC-128-decrypted.bmp -K 1010101 -iv 0101010
openssl enc -aes-128-cfb -d -in CFB-128.bmp -out CFB-128-decrypted.bmp -K 1010101 -iv 0101010
openssl enc -aes-128-cfb1 -d -in CFB1-128.bmp -out CFB1-128-decrypted.bmp -K 1010101 -iv 0101010
openssl enc -aes-128-cfb8 -d -in CFB8-128.bmp -out CFB8-128-decrypted.bmp -K 1010101 -iv 0101010
openssl enc -aes-128-ofb -d -in OFB-128.bmp -out OFB-128-decrypted.bmp -K 1010101 -iv 0101010
openssl enc -aes-128-ecb -d -in ECB-128.bmp -out ECB-128-decrypted.bmp -K 1010101
openssl enc -aes-192-cbc -d -in CBC-192.bmp -out CBC-192-decrypted.bmp -K 1010101 -iv 0101010
openssl enc -aes-192-cfb -d -in CFB-192.bmp -out CFB-192-decrypted.bmp -K 1010101 -iv 0101010
openssl enc -aes-192-cfb1 -d -in CFB1-192.bmp -out CFB1-192-decrypted.bmp -K 1010101 -iv 0101010
openssl enc -aes-192-cfb8 -d -in CFB8-192.bmp -out CFB8-192-decrypted.bmp -K 1010101 -iv 0101010
openssl enc -aes-192-ofb -d -in OFB-192.bmp -out OFB-192-decrypted.bmp -K 1010101 -iv 0101010
openssl enc -aes-192-ecb -d -in ECB-192.bmp -out ECB-192-decrypted.bmp -K 1010101
openssl enc -aes-256-cbc -d -in CBC-256.bmp -out CBC-256-decrypted.bmp -K 1010101 -iv 0101010
openssl enc -aes-256-cfb -d -in CFB-256.bmp -out CFB-256-decrypted.bmp -K 1010101 -iv 0101010
openssl enc -aes-256-cfb1 -d -in CFB1-256.bmp -out CFB1-256-decrypted.bmp -K 1010101 -iv 0101010
openssl enc -aes-256-cfb8 -d -in CFB8-256.bmp -out CFB8-256-decrypted.bmp -K 1010101 -iv 0101010
openssl enc -aes-256-ofb -d -in OFB-256.bmp -out OFB-256-decrypted.bmp -K 1010101 -iv 0101010
openssl enc -aes-256-ecb -d -in ECB-256.bmp -out ECB-256-decrypted.bmp -K 1010101

#Hashing using SHA-1, SHA-256, and SHA-512
openssl dgst -sha1 lena512color.tiff 
openssl dgst -sha256 lena512color.tiff 
openssl dgst -sha512 lena512color.tiff

#RSA-2048 key generation and encryption for a symmetric key 
#since the RSA key is not valid for the large file
openssl genrsa -out RSA-private.pem 2048
openssl rsa -in RSA-private.pem -outform PEM -pubout -out RSA-public.pem
openssl rand -base64 128 > SYM-key.bin
openssl rsautl -encrypt -inkey RSA-public.pem -pubin -in SYM-key.bin -out SYM-key.bin.enc
openssl enc -e -aes-256-cbc -in lena512color.tiff -out lena512color-RSA.enc -pass file:./SYM-key.bin
openssl rsautl -decrypt -inkey RSA-private.pem -in SYM-key.bin.enc -out SYM-key-received.bin 
openssl enc -d -aes-256-cbc -in lena512color-RSA.enc -out lena512color-RSA-decoded.tiff -pass file:./SYM-key-received.bin

#ECDSA key generation with signature and verification
openssl ecparam -name secp521r1 -genkey -param_enc explicit -out ECDSA-private.pem
openssl ec -in ECDSA-private.pem -pubout -out ECDSA-public.pem
openssl dgst -sha256 -sign ECDSA-private.pem lena512color.tiff > ECDSA.bin
openssl dgst -sha256 -verify ECDSA-public.pem -signature ECDSA.bin lena512color.tiff

